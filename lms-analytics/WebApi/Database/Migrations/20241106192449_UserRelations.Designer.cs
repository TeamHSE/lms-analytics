// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Database;

#nullable disable

namespace WebApi.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241106192449_UserRelations")]
    partial class UserRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("DisciplineTeacher", b =>
                {
                    b.Property<int>("DisciplinesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeachersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DisciplinesId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("DisciplineTeacher");
                });

            modelBuilder.Entity("WebApi.Features.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("WebApi.Features.Feedbacks.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReceiverType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SenderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SenderType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StudentId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeacherId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("StudentId1");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TeacherId1");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("WebApi.Features.Managers.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("WebApi.Features.Managers.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("WebApi.Features.StudyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdmissionYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StudyGroups");
                });

            modelBuilder.Entity("WebApi.Features.Users.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("WebApi.Features.Users.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApi.Features.Users.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FatherName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DisciplineTeacher", b =>
                {
                    b.HasOne("WebApi.Features.Managers.Discipline", null)
                        .WithMany()
                        .HasForeignKey("DisciplinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Features.Users.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Features.Company", b =>
                {
                    b.HasOne("WebApi.Features.Users.Admin", null)
                        .WithMany("Companies")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("WebApi.Features.Feedbacks.Feedback", b =>
                {
                    b.HasOne("WebApi.Features.Users.Student", null)
                        .WithMany("ReceivedFeedbacks")
                        .HasForeignKey("StudentId");

                    b.HasOne("WebApi.Features.Users.Student", null)
                        .WithMany("SentFeedbacks")
                        .HasForeignKey("StudentId1");

                    b.HasOne("WebApi.Features.Users.Teacher", null)
                        .WithMany("ReceivedFeedbacks")
                        .HasForeignKey("TeacherId");

                    b.HasOne("WebApi.Features.Users.Teacher", null)
                        .WithMany("SentFeedbacks")
                        .HasForeignKey("TeacherId1");
                });

            modelBuilder.Entity("WebApi.Features.Managers.Discipline", b =>
                {
                    b.HasOne("WebApi.Features.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Features.Managers.Manager", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WebApi.Features.Managers.Manager", b =>
                {
                    b.HasOne("WebApi.Features.Users.Admin", null)
                        .WithMany("Managers")
                        .HasForeignKey("AdminId");

                    b.HasOne("WebApi.Features.Company", "Company")
                        .WithMany("Managers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WebApi.Features.Users.Student", b =>
                {
                    b.HasOne("WebApi.Features.Managers.Discipline", null)
                        .WithMany("Students")
                        .HasForeignKey("DisciplineId");
                });

            modelBuilder.Entity("WebApi.Features.Users.Teacher", b =>
                {
                    b.HasOne("WebApi.Features.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Features.Managers.Manager", null)
                        .WithMany("Teachers")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WebApi.Features.Company", b =>
                {
                    b.Navigation("Managers");
                });

            modelBuilder.Entity("WebApi.Features.Managers.Discipline", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApi.Features.Managers.Manager", b =>
                {
                    b.Navigation("Disciplines");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("WebApi.Features.Users.Admin", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Managers");
                });

            modelBuilder.Entity("WebApi.Features.Users.Student", b =>
                {
                    b.Navigation("ReceivedFeedbacks");

                    b.Navigation("SentFeedbacks");
                });

            modelBuilder.Entity("WebApi.Features.Users.Teacher", b =>
                {
                    b.Navigation("ReceivedFeedbacks");

                    b.Navigation("SentFeedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
